var _user$project$Main$attributes = {
	ctor: '::',
	_0: 'Strength',
	_1: {
		ctor: '::',
		_0: 'Dexterity',
		_1: {
			ctor: '::',
			_0: 'Stamina',
			_1: {
				ctor: '::',
				_0: 'Charisma',
				_1: {
					ctor: '::',
					_0: 'Intelligence',
					_1: {
						ctor: '::',
						_0: 'Wits',
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$Main$supernalAbilities = {
	ctor: '::',
	_0: 'Flying',
	_1: {
		ctor: '::',
		_0: 'Teletransportation',
		_1: {
			ctor: '::',
			_0: 'Lying without being caught',
			_1: {
				ctor: '::',
				_0: 'Making money',
				_1: {
					ctor: '::',
					_0: 'Live forever',
					_1: {
						ctor: '::',
						_0: 'Lay golden eggs',
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$Main$castes = {
	ctor: '::',
	_0: 'Zenith',
	_1: {
		ctor: '::',
		_0: 'Sunray',
		_1: {
			ctor: '::',
			_0: 'Eclipse',
			_1: {
				ctor: '::',
				_0: 'Stardust',
				_1: {ctor: '[]'}
			}
		}
	}
};
var _user$project$Main$simpleOption = function (val) {
	return A2(
		_elm_lang$html$Html$option,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$value(val),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(val),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$pointDot = function (filled) {
	return A2(
		_elm_lang$svg$Svg$svg,
		{
			ctor: '::',
			_0: _elm_lang$svg$Svg_Attributes$width('20'),
			_1: {
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$height('20'),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$circle,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$cx('10'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$cy('10'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$r('8'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$stroke('black'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$strokeWidth('2'),
									_1: {
										ctor: '::',
										_0: filled ? _elm_lang$svg$Svg_Attributes$fill('black') : _elm_lang$svg$Svg_Attributes$fill('white'),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$updateExAttributes = F3(
	function (attributes, operation, exAttribute) {
		var oldAttribute = A2(
			_elm_lang$core$Maybe$withDefault,
			0,
			A2(_elm_lang$core$Dict$get, exAttribute, attributes));
		var _p0 = operation;
		if (_p0.ctor === 'Increment') {
			return (_elm_lang$core$Native_Utils.cmp(oldAttribute, 5) < 0) ? A3(_elm_lang$core$Dict$insert, exAttribute, oldAttribute + 1, attributes) : attributes;
		} else {
			return (_elm_lang$core$Native_Utils.cmp(oldAttribute, 1) > 0) ? A3(_elm_lang$core$Dict$insert, exAttribute, oldAttribute - 1, attributes) : attributes;
		}
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		if (_p1.ctor === 'EditPlayerInformation') {
			var _p2 = _p1._1;
			var newPlayerInfo = A3(
				_elm_lang$core$Dict$insert,
				_p1._0,
				(_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$String$length(_p2),
					0) > 0) ? _elm_lang$core$Maybe$Just(_p2) : _elm_lang$core$Maybe$Nothing,
				model.playerInformation);
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{playerInformation: newPlayerInfo}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						exAttributes: A3(_user$project$Main$updateExAttributes, model.exAttributes, _p1._0, _p1._1)
					}),
				{ctor: '[]'});
		}
	});
var _user$project$Main$emptyExAttributes = _elm_lang$core$Dict$fromList(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'Strength', _1: 1},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'Dexterity', _1: 1},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'Stamina', _1: 1},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'Charisma', _1: 1},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'Intelligence', _1: 1},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'Wits', _1: 1},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$Main$emptyPlayerInfo = _elm_lang$core$Dict$fromList(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'Name', _1: _elm_lang$core$Maybe$Nothing},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'Player', _1: _elm_lang$core$Maybe$Nothing},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'Caste',
					_1: _elm_lang$core$Maybe$Just('Zenith')
				},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'Concept', _1: _elm_lang$core$Maybe$Nothing},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'Anima', _1: _elm_lang$core$Maybe$Nothing},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'SupernalAbility',
								_1: _elm_lang$core$Maybe$Just('Flying')
							},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$Main$Model = F2(
	function (a, b) {
		return {playerInformation: a, exAttributes: b};
	});
var _user$project$Main$init = A2(
	_elm_lang$core$Platform_Cmd_ops['!'],
	A2(_user$project$Main$Model, _user$project$Main$emptyPlayerInfo, _user$project$Main$emptyExAttributes),
	{ctor: '[]'});
var _user$project$Main$EditExAttribute = F2(
	function (a, b) {
		return {ctor: 'EditExAttribute', _0: a, _1: b};
	});
var _user$project$Main$EditPlayerInformation = F2(
	function (a, b) {
		return {ctor: 'EditPlayerInformation', _0: a, _1: b};
	});
var _user$project$Main$selectCaste = A2(
	_elm_lang$html$Html$select,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onInput(
			_user$project$Main$EditPlayerInformation('Caste')),
		_1: {ctor: '[]'}
	},
	A2(_elm_lang$core$List$map, _user$project$Main$simpleOption, _user$project$Main$castes));
var _user$project$Main$selectSupernalAbility = A2(
	_elm_lang$html$Html$select,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onInput(
			_user$project$Main$EditPlayerInformation('SupernalAbility')),
		_1: {ctor: '[]'}
	},
	A2(_elm_lang$core$List$map, _user$project$Main$simpleOption, _user$project$Main$supernalAbilities));
var _user$project$Main$playerInformationView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder('Name'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(
							_user$project$Main$EditPlayerInformation('Name')),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('Player'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(
								_user$project$Main$EditPlayerInformation('Player')),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: _user$project$Main$selectCaste,
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$br,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('Concept'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(
											_user$project$Main$EditPlayerInformation('Concept')),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$placeholder('Anima'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onInput(
												_user$project$Main$EditPlayerInformation('Anima')),
											_1: {ctor: '[]'}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: _user$project$Main$selectSupernalAbility,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$Decrement = {ctor: 'Decrement'};
var _user$project$Main$Increment = {ctor: 'Increment'};
var _user$project$Main$exAttributeView = function (_p3) {
	var _p4 = _p3;
	var _p5 = _p4._0;
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				A2(_elm_lang$core$Basics_ops['++'], _p5, ' ')),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(_p4._1)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								A2(_user$project$Main$EditExAttribute, _user$project$Main$Decrement, _p5)),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('-'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									A2(_user$project$Main$EditExAttribute, _user$project$Main$Increment, _p5)),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('+'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$allExAttributesView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$map,
			_user$project$Main$exAttributeView,
			_elm_lang$core$Dict$toList(model.exAttributes)));
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$Main$playerInformationView(model),
			_1: {
				ctor: '::',
				_0: _user$project$Main$allExAttributesView(model),
				_1: {
					ctor: '::',
					_0: _user$project$Main$pointDot(true),
					_1: {
						ctor: '::',
						_0: _user$project$Main$pointDot(true),
						_1: {
							ctor: '::',
							_0: _user$project$Main$pointDot(false),
							_1: {
								ctor: '::',
								_0: _user$project$Main$pointDot(false),
								_1: {
									ctor: '::',
									_0: _user$project$Main$pointDot(false),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p6) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
