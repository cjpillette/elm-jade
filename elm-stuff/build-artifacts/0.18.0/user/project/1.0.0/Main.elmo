var _user$project$Main$supernalAbilities = {
	ctor: '::',
	_0: 'Flying',
	_1: {
		ctor: '::',
		_0: 'teletransportation',
		_1: {
			ctor: '::',
			_0: 'lying without being caught',
			_1: {
				ctor: '::',
				_0: 'making money',
				_1: {
					ctor: '::',
					_0: 'live forever',
					_1: {
						ctor: '::',
						_0: 'lay golden eggs',
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$Main$castes = {
	ctor: '::',
	_0: 'zenith',
	_1: {
		ctor: '::',
		_0: 'sunray',
		_1: {
			ctor: '::',
			_0: 'eclipse',
			_1: {
				ctor: '::',
				_0: 'stardust',
				_1: {ctor: '[]'}
			}
		}
	}
};
var _user$project$Main$simpleOption = function (val) {
	return A2(
		_elm_lang$html$Html$option,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$value(val),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(val),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		var _p1 = _p0._1;
		var newPlayerInfo = A3(
			_elm_lang$core$Dict$insert,
			_p0._0,
			(_elm_lang$core$Native_Utils.cmp(
				_elm_lang$core$String$length(_p1),
				0) > 0) ? _elm_lang$core$Maybe$Just(_p1) : _elm_lang$core$Maybe$Nothing,
			model.playerInformation);
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{playerInformation: newPlayerInfo}),
			{ctor: '[]'});
	});
var _user$project$Main$emptyPlayerInfo = _elm_lang$core$Dict$fromList(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'Name', _1: _elm_lang$core$Maybe$Nothing},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'Player', _1: _elm_lang$core$Maybe$Nothing},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'Caste',
					_1: _elm_lang$core$Maybe$Just('zenith')
				},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'Concept', _1: _elm_lang$core$Maybe$Nothing},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'Anima', _1: _elm_lang$core$Maybe$Nothing},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'SupernalAbility', _1: _elm_lang$core$Maybe$Nothing},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$Main$Model = function (a) {
	return {playerInformation: a};
};
var _user$project$Main$init = A2(
	_elm_lang$core$Platform_Cmd_ops['!'],
	_user$project$Main$Model(_user$project$Main$emptyPlayerInfo),
	{ctor: '[]'});
var _user$project$Main$EditPlayerInformation = F2(
	function (a, b) {
		return {ctor: 'EditPlayerInformation', _0: a, _1: b};
	});
var _user$project$Main$selectCaste = A2(
	_elm_lang$html$Html$select,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onInput(
			_user$project$Main$EditPlayerInformation('Caste')),
		_1: {ctor: '[]'}
	},
	A2(_elm_lang$core$List$map, _user$project$Main$simpleOption, _user$project$Main$castes));
var _user$project$Main$selectSupernalAbility = A2(
	_elm_lang$html$Html$select,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onInput(
			_user$project$Main$EditPlayerInformation('SupernalAbility')),
		_1: {ctor: '[]'}
	},
	A2(_elm_lang$core$List$map, _user$project$Main$simpleOption, _user$project$Main$supernalAbilities));
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder('Name'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(
							_user$project$Main$EditPlayerInformation('Name')),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('Player'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(
								_user$project$Main$EditPlayerInformation('Player')),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: _user$project$Main$selectCaste,
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$br,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('Concept'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(
											_user$project$Main$EditPlayerInformation('Concept')),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$placeholder('Anima'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onInput(
												_user$project$Main$EditPlayerInformation('Anima')),
											_1: {ctor: '[]'}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: _user$project$Main$selectSupernalAbility,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p2) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
